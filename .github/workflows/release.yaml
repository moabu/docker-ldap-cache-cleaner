name: release
# This builds, packages and releases pygluu-kubernetes
on:
  push:
    paths:
      - __version__.py
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]

    steps:
    - name: Checkout code
      uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        sudo apt-get update
        sudo apt-get install ruby

    - name: Checkout code
      uses: actions/checkout@master


    - name: Get version
      id: get_version
      run: |
        echo "::set-output name=version::$(python3 -c 'import __version__ ; print(__version__.__version__)')"
        echo "::set-output name=pversion::$(python3 -c 'import __version__ ; print(__version__.__previous_version__)')"
        echo "::set-output name=gituser::$(python3 -c 'import os ; REPO = os.environ.get("GITHUB_REPOSITORY") ; print(str(REPO).split("/")[0])')"
        echo "::set-output name=gitproject::$(python3 -c 'import os ; REPO = os.environ.get("GITHUB_REPOSITORY") ; print(str(REPO).split("/")[1])')"

    - name: Install Changelog autogenerator
      run: |
        cd /home/runner/work/test/
        sudo gem install github_changelog_generator
        github_changelog_generator --user ${{ steps.get_version.outputs.gituser }} --project ${{ steps.get_version.outputs.gitproject }} --date-format "%m/%d/%Y" --header-label "# Release Notes" --output release_notes.md --token ${{ secrets.token }} --since-tag v${{ steps.get_version.outputs.pversion }}
        sed -i '$ d' release_notes.md
        github_changelog_generator --user ${{ steps.get_version.outputs.gituser }} --project ${{ steps.get_version.outputs.gitproject }} --date-format "%m/%d/%Y" --token ${{ secrets.token }}
        sed -i '$ d' CHANGELOG.md

    - name: Read CHANGELOG
      id: changelog
      run: |
        release_notes=$(cat /home/runner/work/test/release_notes.md)
        release_notes="${release_notes//'%'/'%25'}"
        release_notes="${release_notes//$'\n'/'%0A'}"
        release_notes="${release_notes//$'\r'/'%0D'}"
        echo "::set-output name=body::$release_notes"
        cp /home/runner/work/test/CHANGELOG.md .

    - name: Create Release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        release_name: v${{ steps.get_version.outputs.version }}
        body: |
          ![CDNJS](https://img.shields.io/badge/Gluu-4.2-green)
          ${{ steps.changelog.outputs.body }}
        draft: false
        prerelease: false